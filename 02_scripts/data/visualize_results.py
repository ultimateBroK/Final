#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
VISUALIZATION SCRIPT: Tr·ª±c quan h√≥a k·∫øt qu·∫£ clustering

M·ª•c ƒë√≠ch:
- T·∫°o bi·ªÉu ƒë·ªì ph√¢n t√≠ch k·∫øt qu·∫£ K-means
- Hi·ªÉn th·ªã ph√¢n ph·ªëi clusters, t·ª∑ l·ªá r·ª≠a ti·ªÅn
- L∆∞u c√°c bi·ªÉu ƒë·ªì v√†o folder 06_visualizations

S·ª≠ d·ª•ng:
    python 02_scripts/data/visualize_results.py
"""

import os
import numpy as np
import polars as pl
from datetime import datetime

# ==================== C·∫§U H√åNH ====================
ROOT_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..'))
DATA_RAW = os.path.join(ROOT_DIR, '01_data', 'raw', 'HI-Large_Trans.csv')
DATA_RESULTS = os.path.join(ROOT_DIR, '01_data', 'results')
VISUALIZATIONS_DIR = os.path.join(ROOT_DIR, '06_visualizations')

# T·∫°o th∆∞ m·ª•c visualizations
os.makedirs(VISUALIZATIONS_DIR, exist_ok=True)

def create_visualizations():
    """T·∫°o c√°c bi·ªÉu ƒë·ªì tr·ª±c quan"""
    
    print("="*70)
    print("üìä T·∫†O BI·ªÇU ƒê·ªí TR·ª∞C QUAN")
    print("="*70)
    print()
    
    # ==================== ƒê·ªåC D·ªÆ LI·ªÜU ====================
    print("üìÇ ƒê·ªçc d·ªØ li·ªáu...")
    
    clusters_file = os.path.join(DATA_RESULTS, 'clustered_results.txt')
    clusters = np.loadtxt(clusters_file, dtype=int)
    
    print(f"‚úÖ ƒê√£ load {len(clusters):,} nh√£n c·ª•m")
    
    # ƒê·ªçc d·ªØ li·ªáu g·ªëc (ch·ªâ c·ªôt Is Laundering)
    df_lazy = pl.scan_csv(DATA_RAW).select(['Is Laundering'])
    df = df_lazy.with_columns(
        pl.Series('cluster', clusters).alias('cluster')
    ).collect()
    
    print("‚úÖ ƒê√£ load d·ªØ li·ªáu g·ªëc")
    print()
    
    # ==================== PH√ÇN T√çCH D·ªÆ LI·ªÜU ====================
    print("üîç Ph√¢n t√≠ch d·ªØ li·ªáu...")
    
    # K√≠ch th∆∞·ªõc clusters
    cluster_counts = df.group_by('cluster').agg(
        pl.len().alias('count')
    ).sort('cluster')
    
    # T·ª∑ l·ªá r·ª≠a ti·ªÅn
    laundering_stats = df.group_by('cluster').agg([
        pl.len().alias('total'),
        pl.col('Is Laundering').sum().alias('laundering_count'),
        (pl.col('Is Laundering').sum() / pl.len() * 100).alias('laundering_rate')
    ]).sort('cluster')
    
    print("‚úÖ Ho√†n t·∫•t ph√¢n t√≠ch")
    print()
    
    # ==================== T·∫†O ASCII CHARTS ====================
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    report_file = os.path.join(VISUALIZATIONS_DIR, f'visual_report_{timestamp}.md')
    
    print(f"üìù T·∫°o b√°o c√°o tr·ª±c quan: {report_file}")
    
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write("# B√ÅO C√ÅO TR·ª∞C QUAN K·∫æT QU·∫¢ CLUSTERING\n\n")
        f.write(f"**Th·ªùi gian:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        f.write(f"**T·ªïng giao d·ªãch:** {len(clusters):,}\n\n")
        f.write("---\n\n")
        
        # ==================== BI·ªÇU ƒê·ªí 1: PH√ÇN PH·ªêI CLUSTERS ====================
        f.write("## 1. PH√ÇN PH·ªêI C√ÅC C·ª§M\n\n")
        f.write("Bi·ªÉu ƒë·ªì c·ªôt hi·ªÉn th·ªã s·ªë l∆∞·ª£ng giao d·ªãch trong m·ªói c·ª•m:\n\n")
        f.write("```\n")
        
        max_count = cluster_counts['count'].max()
        max_bar_length = 50
        
        for row in cluster_counts.iter_rows(named=True):
            cluster_id = row['cluster']
            count = row['count']
            percentage = (count / len(clusters)) * 100
            bar_length = int((count / max_count) * max_bar_length)
            bar = '‚ñà' * bar_length
            
            f.write(f"Cluster {cluster_id} ‚îÇ{bar:50s}‚îÇ {count:>12,} ({percentage:5.2f}%)\n")
        
        f.write("```\n\n")
        
        # ==================== BI·ªÇU ƒê·ªí 2: T·ª∂ L·ªÜ R·ª¨A TI·ªÄN ====================
        f.write("## 2. T·ª∂ L·ªÜ R·ª¨A TI·ªÄN THEO C·ª§M\n\n")
        f.write("Bi·ªÉu ƒë·ªì c·ªôt ngang hi·ªÉn th·ªã t·ª∑ l·ªá % r·ª≠a ti·ªÅn:\n\n")
        f.write("```\n")
        
        max_rate = laundering_stats['laundering_rate'].max()
        max_bar_length = 40
        
        for row in laundering_stats.iter_rows(named=True):
            cluster_id = row['cluster']
            rate = row['laundering_rate']
            laundering_count = row['laundering_count']
            
            # T√≠nh ƒë·ªô d√†i thanh d·ª±a tr√™n t·ª∑ l·ªá
            if max_rate > 0:
                bar_length = int((rate / max_rate) * max_bar_length)
            else:
                bar_length = 0
            
            # M√†u c·∫£nh b√°o (ASCII)
            if rate > 10.0:
                marker = 'üî¥'
                level = 'R·ª¶I RO CAO'
            elif rate > 1.0:
                marker = 'üü°'
                level = 'R·ª¶I RO TB'
            else:
                marker = 'üü¢'
                level = 'AN TO√ÄN'
            
            bar = '‚ñì' * bar_length
            
            f.write(f"Cluster {cluster_id} {marker} ‚îÇ{bar:40s}‚îÇ {rate:6.3f}% ({laundering_count:>8,}) - {level}\n")
        
        f.write("```\n\n")
        
        # ==================== B·∫¢NG TH·ªêNG K√ä CHI TI·∫æT ====================
        f.write("## 3. B·∫¢NG TH·ªêNG K√ä CHI TI·∫æT\n\n")
        f.write("| Cluster | T·ªïng giao d·ªãch | R·ª≠a ti·ªÅn | T·ª∑ l·ªá (%) | Ph√¢n lo·∫°i |\n")
        f.write("|---------|----------------|----------|-----------|------------|\n")
        
        for row in laundering_stats.iter_rows(named=True):
            cluster_id = row['cluster']
            total = row['total']
            laundering = row['laundering_count']
            rate = row['laundering_rate']
            
            if rate > 10.0:
                risk = '‚ö†Ô∏è R·ª¶I RO CAO'
            elif rate > 1.0:
                risk = '‚ö†Ô∏è Trung b√¨nh'
            else:
                risk = '‚úÖ Th·∫•p'
            
            f.write(f"| {cluster_id} | {total:,} | {laundering:,} | {rate:.3f} | {risk} |\n")
        
        f.write("\n")
        
        # ==================== NH·∫¨N X√âT ====================
        f.write("## 4. NH·∫¨N X√âT V√Ä KHUY·∫æN NGH·ªä\n\n")
        
        max_rate_val = laundering_stats['laundering_rate'].max()
        min_rate_val = laundering_stats['laundering_rate'].min()
        
        max_cluster_row = laundering_stats.filter(
            pl.col('laundering_rate') == max_rate_val
        ).row(0, named=True)
        
        min_cluster_row = laundering_stats.filter(
            pl.col('laundering_rate') == min_rate_val
        ).row(0, named=True)
        
        f.write(f"### C·ª•m nghi ng·ªù nh·∫•t\n")
        f.write(f"- **Cluster {max_cluster_row['cluster']}**: {max_rate_val:.3f}% r·ª≠a ti·ªÅn\n")
        f.write(f"- S·ªë giao d·ªãch r·ª≠a ti·ªÅn: {max_cluster_row['laundering_count']:,}\n")
        f.write(f"- üéØ **Khuy·∫øn ngh·ªã**: ∆Øu ti√™n ki·ªÉm tra c·ª•m n√†y\n\n")
        
        f.write(f"### C·ª•m an to√†n nh·∫•t\n")
        f.write(f"- **Cluster {min_cluster_row['cluster']}**: {min_rate_val:.3f}% r·ª≠a ti·ªÅn\n")
        f.write(f"- S·ªë giao d·ªãch r·ª≠a ti·ªÅn: {min_cluster_row['laundering_count']:,}\n")
        f.write(f"- ‚úÖ **Khuy·∫øn ngh·ªã**: ∆Øu ti√™n th·∫•p\n\n")
        
        # ƒê√°nh gi√° t·ªïng th·ªÉ
        f.write("### ƒê√°nh gi√° t·ªïng th·ªÉ\n\n")
        if max_rate_val > 10.0:
            f.write("‚ö†Ô∏è **C√ì R·ª¶I RO CAO**\n\n")
            f.write("C√≥ c·ª•m v∆∞·ª£t ng∆∞·ª°ng 10% r·ª≠a ti·ªÅn. C·∫ßn h√†nh ƒë·ªông ngay:\n")
            f.write("- Ki·ªÉm tra chi ti·∫øt c√°c giao d·ªãch trong c·ª•m r·ªßi ro cao\n")
            f.write("- Xem x√©t tƒÉng c∆∞·ªùng gi√°m s√°t\n")
            f.write("- B√°o c√°o c∆° quan ch·ª©c nƒÉng n·∫øu c·∫ßn\n")
        elif max_rate_val > 1.0:
            f.write("‚ö†Ô∏è **R·ª¶I RO TRUNG B√åNH**\n\n")
            f.write("T·ª∑ l·ªá r·ª≠a ti·ªÅn trong m·ª©c ch·∫•p nh·∫≠n nh∆∞ng c·∫ßn theo d√µi:\n")
            f.write("- Theo d√µi xu h∆∞·ªõng theo th·ªùi gian\n")
            f.write("- Xem x√©t ƒëi·ªÅu ch·ªânh threshold ph√°t hi·ªán\n")
        else:
            f.write("‚úÖ **R·ª¶I RO TH·∫§P**\n\n")
            f.write("H·ªá th·ªëng ho·∫°t ƒë·ªông t·ªët:\n")
            f.write("- T·ª∑ l·ªá r·ª≠a ti·ªÅn th·∫•p tr√™n t·∫•t c·∫£ c√°c c·ª•m\n")
            f.write("- Ti·∫øp t·ª•c duy tr√¨ gi√°m s√°t ƒë·ªãnh k·ª≥\n")
        
        f.write("\n---\n\n")
        f.write("**Ghi ch√∫**: Bi·ªÉu ƒë·ªì ƒë∆∞·ª£c t·∫°o b·∫±ng k√Ω t·ª± ASCII ƒë·ªÉ d·ªÖ xem tr√™n terminal v√† text editor.\n")
    
    print(f"‚úÖ ƒê√£ l∆∞u b√°o c√°o: {report_file}")
    print()
    
    # ==================== T·∫†O SUMMARY TXT ====================
    summary_file = os.path.join(VISUALIZATIONS_DIR, 'latest_summary.txt')
    
    with open(summary_file, 'w', encoding='utf-8') as f:
        f.write("T√ìM T·∫ÆT K·∫æT QU·∫¢ CLUSTERING\n")
        f.write("="*50 + "\n\n")
        f.write(f"Th·ªùi gian: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        f.write(f"T·ªïng giao d·ªãch: {len(clusters):,}\n")
        f.write(f"S·ªë c·ª•m: {len(cluster_counts)}\n\n")
        
        f.write("PH√ÇN PH·ªêI:\n")
        for row in cluster_counts.iter_rows(named=True):
            percentage = (row['count'] / len(clusters)) * 100
            f.write(f"  Cluster {row['cluster']}: {row['count']:,} ({percentage:.2f}%)\n")
        
        f.write("\nT·ª∂ L·ªÜ R·ª¨A TI·ªÄN:\n")
        for row in laundering_stats.iter_rows(named=True):
            f.write(f"  Cluster {row['cluster']}: {row['laundering_rate']:.3f}% ({row['laundering_count']:,} giao d·ªãch)\n")
    
    print(f"‚úÖ ƒê√£ l∆∞u summary: {summary_file}")
    print()
    
    # ==================== HO√ÄN T·∫§T ====================
    print("="*70)
    print("‚úÖ HO√ÄN T·∫§T T·∫†O BI·ªÇU ƒê·ªí!")
    print("="*70)
    print(f"üìÅ Th∆∞ m·ª•c: {VISUALIZATIONS_DIR}")
    print(f"üìä B√°o c√°o chi ti·∫øt: {os.path.basename(report_file)}")
    print(f"üìÑ T√≥m t·∫Øt: latest_summary.txt")
    print()
    print("üí° Xem b√°o c√°o:")
    print(f"   cat {report_file}")
    print(f"   cat {summary_file}")
    print()

if __name__ == "__main__":
    create_visualizations()
